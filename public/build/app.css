/*!*************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!./assets/styles/app.css ***!
  \*************************************************************************************************/
body {
    /*background-color: lightgray;*/
}

/*!******************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./assets/pages/scola/Import.vue?vue&type=style&index=0&id=6b66e48e&scoped=true&lang=css ***!
  \******************************************************************************************************************************************************************************************************************************************************************************/

.lds-ripple[data-v-6b66e48e] {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}
.lds-ripple div[data-v-6b66e48e] {
  position: absolute;
  border: 4px solid #178F96;
  opacity: 1;
  border-radius: 50%;
  animation: lds-ripple-6b66e48e 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;
}
.lds-ripple div[data-v-6b66e48e]:nth-child(2) {
  animation-delay: -0.5s;
}
@keyframes lds-ripple-6b66e48e {
0% {
    top: 36px;
    left: 36px;
    width: 0;
    height: 0;
    opacity: 0;
}
4.9% {
    top: 36px;
    left: 36px;
    width: 0;
    height: 0;
    opacity: 0;
}
5% {
    top: 36px;
    left: 36px;
    width: 0;
    height: 0;
    opacity: 1;
}
100% {
    top: 0px;
    left: 0px;
    width: 72px;
    height: 72px;
    opacity: 0;
}
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/